=begin
#Textmagic API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2

Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'date'
require 'time'

module TextmagicRestClient
  class GetStateResponse
    attr_accessor :system_cache_clear

    attr_accessor :system_exit

    attr_accessor :system_alert

    attr_accessor :system_account_state_changed

    attr_accessor :system_account_closed

    attr_accessor :system_account_additional_fields

    attr_accessor :system_account_permissions_changed

    attr_accessor :user_profile_changed

    attr_accessor :user_balance_changed

    attr_accessor :user_impersonation_end

    attr_accessor :message_deleted

    attr_accessor :message_incoming

    attr_accessor :message_incoming_deleted

    attr_accessor :message_state_changed

    attr_accessor :message_bulk_end

    attr_accessor :message_wipe_end

    attr_accessor :message_sent

    attr_accessor :message_session_deleted

    attr_accessor :message_cache_clear

    attr_accessor :message_incoming_cache_clear

    attr_accessor :message_schedule_added

    attr_accessor :message_schedule_state_changed

    attr_accessor :message_schedule_deleted

    attr_accessor :message_schedule_not_sent_state_changed

    attr_accessor :message_schedule_cache_clear

    attr_accessor :message_template_cache_clear

    attr_accessor :call_finished

    attr_accessor :chat_created

    attr_accessor :chat_marked_as_read

    attr_accessor :chat_muted

    attr_accessor :chat_unmuted

    attr_accessor :chat_pinned

    attr_accessor :chat_unpinned

    attr_accessor :chat_deleted

    attr_accessor :chat_closed

    attr_accessor :chat_reopened

    attr_accessor :chat_cache_clear

    attr_accessor :chat_read

    attr_accessor :chat_unread

    attr_accessor :contact_added

    attr_accessor :contact_deleted

    attr_accessor :contact_state_changed

    attr_accessor :contact_unsubscribed

    attr_accessor :contact_note_added

    attr_accessor :contact_note_deleted

    attr_accessor :contact_note_state_changed

    attr_accessor :list_added

    attr_accessor :list_deleted

    attr_accessor :list_state_changed

    attr_accessor :contact_wipe_end

    attr_accessor :contact_import_end

    attr_accessor :contact_cache_clear

    attr_accessor :list_cache_clear

    attr_accessor :custom_fields_cache_clear

    attr_accessor :progress_carrier_bulk_lookup

    attr_accessor :progress_email_bulk_lookup

    attr_accessor :progress_sub_account_bulk_import

    attr_accessor :progress_contact_bulk_import

    attr_accessor :force_refresh_web_app

    attr_accessor :chat_sender_settings_changed

    attr_accessor :country_sender_settings_changed

    attr_accessor :chat_summary_chunk

    attr_accessor :chat_ways_to_reply_chunk

    attr_accessor :chat_suggested_reply_chunk

    attr_accessor :user_subscription_changed

    attr_accessor :user_subscription_deleted

    attr_accessor :task_created

    attr_accessor :task_updated

    attr_accessor :task_deleted

    attr_accessor :task_moved_all

    attr_accessor :task_stage_created

    attr_accessor :task_stage_updated

    attr_accessor :task_stage_deleted

    attr_accessor :task_board_created

    attr_accessor :task_board_updated

    attr_accessor :task_board_deleted

    attr_accessor :task_board_archived

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'system_cache_clear' => :'systemCacheClear',
        :'system_exit' => :'systemExit',
        :'system_alert' => :'systemAlert',
        :'system_account_state_changed' => :'systemAccountStateChanged',
        :'system_account_closed' => :'systemAccountClosed',
        :'system_account_additional_fields' => :'systemAccountAdditionalFields',
        :'system_account_permissions_changed' => :'systemAccountPermissionsChanged',
        :'user_profile_changed' => :'userProfileChanged',
        :'user_balance_changed' => :'userBalanceChanged',
        :'user_impersonation_end' => :'userImpersonationEnd',
        :'message_deleted' => :'messageDeleted',
        :'message_incoming' => :'messageIncoming',
        :'message_incoming_deleted' => :'messageIncomingDeleted',
        :'message_state_changed' => :'messageStateChanged',
        :'message_bulk_end' => :'messageBulkEnd',
        :'message_wipe_end' => :'messageWipeEnd',
        :'message_sent' => :'messageSent',
        :'message_session_deleted' => :'messageSessionDeleted',
        :'message_cache_clear' => :'messageCacheClear',
        :'message_incoming_cache_clear' => :'messageIncomingCacheClear',
        :'message_schedule_added' => :'messageScheduleAdded',
        :'message_schedule_state_changed' => :'messageScheduleStateChanged',
        :'message_schedule_deleted' => :'messageScheduleDeleted',
        :'message_schedule_not_sent_state_changed' => :'messageScheduleNotSentStateChanged',
        :'message_schedule_cache_clear' => :'messageScheduleCacheClear',
        :'message_template_cache_clear' => :'messageTemplateCacheClear',
        :'call_finished' => :'callFinished',
        :'chat_created' => :'chatCreated',
        :'chat_marked_as_read' => :'chatMarkedAsRead',
        :'chat_muted' => :'chatMuted',
        :'chat_unmuted' => :'chatUnmuted',
        :'chat_pinned' => :'chatPinned',
        :'chat_unpinned' => :'chatUnpinned',
        :'chat_deleted' => :'chatDeleted',
        :'chat_closed' => :'chatClosed',
        :'chat_reopened' => :'chatReopened',
        :'chat_cache_clear' => :'chatCacheClear',
        :'chat_read' => :'chatRead',
        :'chat_unread' => :'chatUnread',
        :'contact_added' => :'contactAdded',
        :'contact_deleted' => :'contactDeleted',
        :'contact_state_changed' => :'contactStateChanged',
        :'contact_unsubscribed' => :'contactUnsubscribed',
        :'contact_note_added' => :'contactNoteAdded',
        :'contact_note_deleted' => :'contactNoteDeleted',
        :'contact_note_state_changed' => :'contactNoteStateChanged',
        :'list_added' => :'listAdded',
        :'list_deleted' => :'listDeleted',
        :'list_state_changed' => :'listStateChanged',
        :'contact_wipe_end' => :'contactWipeEnd',
        :'contact_import_end' => :'contactImportEnd',
        :'contact_cache_clear' => :'contactCacheClear',
        :'list_cache_clear' => :'listCacheClear',
        :'custom_fields_cache_clear' => :'customFieldsCacheClear',
        :'progress_carrier_bulk_lookup' => :'progressCarrierBulkLookup',
        :'progress_email_bulk_lookup' => :'progressEmailBulkLookup',
        :'progress_sub_account_bulk_import' => :'progressSubAccountBulkImport',
        :'progress_contact_bulk_import' => :'progressContactBulkImport',
        :'force_refresh_web_app' => :'forceRefreshWebApp',
        :'chat_sender_settings_changed' => :'chatSenderSettingsChanged',
        :'country_sender_settings_changed' => :'countrySenderSettingsChanged',
        :'chat_summary_chunk' => :'chatSummaryChunk',
        :'chat_ways_to_reply_chunk' => :'chatWaysToReplyChunk',
        :'chat_suggested_reply_chunk' => :'chatSuggestedReplyChunk',
        :'user_subscription_changed' => :'userSubscriptionChanged',
        :'user_subscription_deleted' => :'userSubscriptionDeleted',
        :'task_created' => :'taskCreated',
        :'task_updated' => :'taskUpdated',
        :'task_deleted' => :'taskDeleted',
        :'task_moved_all' => :'taskMovedAll',
        :'task_stage_created' => :'taskStageCreated',
        :'task_stage_updated' => :'taskStageUpdated',
        :'task_stage_deleted' => :'taskStageDeleted',
        :'task_board_created' => :'taskBoardCreated',
        :'task_board_updated' => :'taskBoardUpdated',
        :'task_board_deleted' => :'taskBoardDeleted',
        :'task_board_archived' => :'taskBoardArchived'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'system_cache_clear' => :'Integer',
        :'system_exit' => :'Integer',
        :'system_alert' => :'Integer',
        :'system_account_state_changed' => :'Integer',
        :'system_account_closed' => :'Integer',
        :'system_account_additional_fields' => :'Integer',
        :'system_account_permissions_changed' => :'Integer',
        :'user_profile_changed' => :'Integer',
        :'user_balance_changed' => :'Integer',
        :'user_impersonation_end' => :'Integer',
        :'message_deleted' => :'Integer',
        :'message_incoming' => :'Integer',
        :'message_incoming_deleted' => :'Integer',
        :'message_state_changed' => :'Integer',
        :'message_bulk_end' => :'Integer',
        :'message_wipe_end' => :'Integer',
        :'message_sent' => :'Integer',
        :'message_session_deleted' => :'Integer',
        :'message_cache_clear' => :'Integer',
        :'message_incoming_cache_clear' => :'Integer',
        :'message_schedule_added' => :'Integer',
        :'message_schedule_state_changed' => :'Integer',
        :'message_schedule_deleted' => :'Integer',
        :'message_schedule_not_sent_state_changed' => :'Integer',
        :'message_schedule_cache_clear' => :'Integer',
        :'message_template_cache_clear' => :'Integer',
        :'call_finished' => :'Integer',
        :'chat_created' => :'Integer',
        :'chat_marked_as_read' => :'Integer',
        :'chat_muted' => :'Integer',
        :'chat_unmuted' => :'Integer',
        :'chat_pinned' => :'Integer',
        :'chat_unpinned' => :'Integer',
        :'chat_deleted' => :'Integer',
        :'chat_closed' => :'Integer',
        :'chat_reopened' => :'Integer',
        :'chat_cache_clear' => :'Integer',
        :'chat_read' => :'Integer',
        :'chat_unread' => :'Integer',
        :'contact_added' => :'Integer',
        :'contact_deleted' => :'Integer',
        :'contact_state_changed' => :'Integer',
        :'contact_unsubscribed' => :'Integer',
        :'contact_note_added' => :'Integer',
        :'contact_note_deleted' => :'Integer',
        :'contact_note_state_changed' => :'Integer',
        :'list_added' => :'Integer',
        :'list_deleted' => :'Integer',
        :'list_state_changed' => :'Integer',
        :'contact_wipe_end' => :'Integer',
        :'contact_import_end' => :'Integer',
        :'contact_cache_clear' => :'Integer',
        :'list_cache_clear' => :'Integer',
        :'custom_fields_cache_clear' => :'Integer',
        :'progress_carrier_bulk_lookup' => :'Integer',
        :'progress_email_bulk_lookup' => :'Integer',
        :'progress_sub_account_bulk_import' => :'Integer',
        :'progress_contact_bulk_import' => :'Integer',
        :'force_refresh_web_app' => :'Integer',
        :'chat_sender_settings_changed' => :'Integer',
        :'country_sender_settings_changed' => :'Integer',
        :'chat_summary_chunk' => :'Integer',
        :'chat_ways_to_reply_chunk' => :'Integer',
        :'chat_suggested_reply_chunk' => :'Integer',
        :'user_subscription_changed' => :'Integer',
        :'user_subscription_deleted' => :'Integer',
        :'task_created' => :'Integer',
        :'task_updated' => :'Integer',
        :'task_deleted' => :'Integer',
        :'task_moved_all' => :'Integer',
        :'task_stage_created' => :'Integer',
        :'task_stage_updated' => :'Integer',
        :'task_stage_deleted' => :'Integer',
        :'task_board_created' => :'Integer',
        :'task_board_updated' => :'Integer',
        :'task_board_deleted' => :'Integer',
        :'task_board_archived' => :'Integer'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `TextmagicRestClient::GetStateResponse` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `TextmagicRestClient::GetStateResponse`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'system_cache_clear')
        self.system_cache_clear = attributes[:'system_cache_clear']
      else
        self.system_cache_clear = nil
      end

      if attributes.key?(:'system_exit')
        self.system_exit = attributes[:'system_exit']
      else
        self.system_exit = nil
      end

      if attributes.key?(:'system_alert')
        self.system_alert = attributes[:'system_alert']
      else
        self.system_alert = nil
      end

      if attributes.key?(:'system_account_state_changed')
        self.system_account_state_changed = attributes[:'system_account_state_changed']
      else
        self.system_account_state_changed = nil
      end

      if attributes.key?(:'system_account_closed')
        self.system_account_closed = attributes[:'system_account_closed']
      else
        self.system_account_closed = nil
      end

      if attributes.key?(:'system_account_additional_fields')
        self.system_account_additional_fields = attributes[:'system_account_additional_fields']
      else
        self.system_account_additional_fields = nil
      end

      if attributes.key?(:'system_account_permissions_changed')
        self.system_account_permissions_changed = attributes[:'system_account_permissions_changed']
      else
        self.system_account_permissions_changed = nil
      end

      if attributes.key?(:'user_profile_changed')
        self.user_profile_changed = attributes[:'user_profile_changed']
      else
        self.user_profile_changed = nil
      end

      if attributes.key?(:'user_balance_changed')
        self.user_balance_changed = attributes[:'user_balance_changed']
      else
        self.user_balance_changed = nil
      end

      if attributes.key?(:'user_impersonation_end')
        self.user_impersonation_end = attributes[:'user_impersonation_end']
      else
        self.user_impersonation_end = nil
      end

      if attributes.key?(:'message_deleted')
        self.message_deleted = attributes[:'message_deleted']
      else
        self.message_deleted = nil
      end

      if attributes.key?(:'message_incoming')
        self.message_incoming = attributes[:'message_incoming']
      else
        self.message_incoming = nil
      end

      if attributes.key?(:'message_incoming_deleted')
        self.message_incoming_deleted = attributes[:'message_incoming_deleted']
      else
        self.message_incoming_deleted = nil
      end

      if attributes.key?(:'message_state_changed')
        self.message_state_changed = attributes[:'message_state_changed']
      else
        self.message_state_changed = nil
      end

      if attributes.key?(:'message_bulk_end')
        self.message_bulk_end = attributes[:'message_bulk_end']
      else
        self.message_bulk_end = nil
      end

      if attributes.key?(:'message_wipe_end')
        self.message_wipe_end = attributes[:'message_wipe_end']
      else
        self.message_wipe_end = nil
      end

      if attributes.key?(:'message_sent')
        self.message_sent = attributes[:'message_sent']
      else
        self.message_sent = nil
      end

      if attributes.key?(:'message_session_deleted')
        self.message_session_deleted = attributes[:'message_session_deleted']
      else
        self.message_session_deleted = nil
      end

      if attributes.key?(:'message_cache_clear')
        self.message_cache_clear = attributes[:'message_cache_clear']
      else
        self.message_cache_clear = nil
      end

      if attributes.key?(:'message_incoming_cache_clear')
        self.message_incoming_cache_clear = attributes[:'message_incoming_cache_clear']
      else
        self.message_incoming_cache_clear = nil
      end

      if attributes.key?(:'message_schedule_added')
        self.message_schedule_added = attributes[:'message_schedule_added']
      else
        self.message_schedule_added = nil
      end

      if attributes.key?(:'message_schedule_state_changed')
        self.message_schedule_state_changed = attributes[:'message_schedule_state_changed']
      else
        self.message_schedule_state_changed = nil
      end

      if attributes.key?(:'message_schedule_deleted')
        self.message_schedule_deleted = attributes[:'message_schedule_deleted']
      else
        self.message_schedule_deleted = nil
      end

      if attributes.key?(:'message_schedule_not_sent_state_changed')
        self.message_schedule_not_sent_state_changed = attributes[:'message_schedule_not_sent_state_changed']
      else
        self.message_schedule_not_sent_state_changed = nil
      end

      if attributes.key?(:'message_schedule_cache_clear')
        self.message_schedule_cache_clear = attributes[:'message_schedule_cache_clear']
      else
        self.message_schedule_cache_clear = nil
      end

      if attributes.key?(:'message_template_cache_clear')
        self.message_template_cache_clear = attributes[:'message_template_cache_clear']
      else
        self.message_template_cache_clear = nil
      end

      if attributes.key?(:'call_finished')
        self.call_finished = attributes[:'call_finished']
      else
        self.call_finished = nil
      end

      if attributes.key?(:'chat_created')
        self.chat_created = attributes[:'chat_created']
      else
        self.chat_created = nil
      end

      if attributes.key?(:'chat_marked_as_read')
        self.chat_marked_as_read = attributes[:'chat_marked_as_read']
      else
        self.chat_marked_as_read = nil
      end

      if attributes.key?(:'chat_muted')
        self.chat_muted = attributes[:'chat_muted']
      else
        self.chat_muted = nil
      end

      if attributes.key?(:'chat_unmuted')
        self.chat_unmuted = attributes[:'chat_unmuted']
      else
        self.chat_unmuted = nil
      end

      if attributes.key?(:'chat_pinned')
        self.chat_pinned = attributes[:'chat_pinned']
      else
        self.chat_pinned = nil
      end

      if attributes.key?(:'chat_unpinned')
        self.chat_unpinned = attributes[:'chat_unpinned']
      else
        self.chat_unpinned = nil
      end

      if attributes.key?(:'chat_deleted')
        self.chat_deleted = attributes[:'chat_deleted']
      else
        self.chat_deleted = nil
      end

      if attributes.key?(:'chat_closed')
        self.chat_closed = attributes[:'chat_closed']
      else
        self.chat_closed = nil
      end

      if attributes.key?(:'chat_reopened')
        self.chat_reopened = attributes[:'chat_reopened']
      else
        self.chat_reopened = nil
      end

      if attributes.key?(:'chat_cache_clear')
        self.chat_cache_clear = attributes[:'chat_cache_clear']
      else
        self.chat_cache_clear = nil
      end

      if attributes.key?(:'chat_read')
        self.chat_read = attributes[:'chat_read']
      else
        self.chat_read = nil
      end

      if attributes.key?(:'chat_unread')
        self.chat_unread = attributes[:'chat_unread']
      else
        self.chat_unread = nil
      end

      if attributes.key?(:'contact_added')
        self.contact_added = attributes[:'contact_added']
      else
        self.contact_added = nil
      end

      if attributes.key?(:'contact_deleted')
        self.contact_deleted = attributes[:'contact_deleted']
      else
        self.contact_deleted = nil
      end

      if attributes.key?(:'contact_state_changed')
        self.contact_state_changed = attributes[:'contact_state_changed']
      else
        self.contact_state_changed = nil
      end

      if attributes.key?(:'contact_unsubscribed')
        self.contact_unsubscribed = attributes[:'contact_unsubscribed']
      else
        self.contact_unsubscribed = nil
      end

      if attributes.key?(:'contact_note_added')
        self.contact_note_added = attributes[:'contact_note_added']
      else
        self.contact_note_added = nil
      end

      if attributes.key?(:'contact_note_deleted')
        self.contact_note_deleted = attributes[:'contact_note_deleted']
      else
        self.contact_note_deleted = nil
      end

      if attributes.key?(:'contact_note_state_changed')
        self.contact_note_state_changed = attributes[:'contact_note_state_changed']
      else
        self.contact_note_state_changed = nil
      end

      if attributes.key?(:'list_added')
        self.list_added = attributes[:'list_added']
      else
        self.list_added = nil
      end

      if attributes.key?(:'list_deleted')
        self.list_deleted = attributes[:'list_deleted']
      else
        self.list_deleted = nil
      end

      if attributes.key?(:'list_state_changed')
        self.list_state_changed = attributes[:'list_state_changed']
      else
        self.list_state_changed = nil
      end

      if attributes.key?(:'contact_wipe_end')
        self.contact_wipe_end = attributes[:'contact_wipe_end']
      else
        self.contact_wipe_end = nil
      end

      if attributes.key?(:'contact_import_end')
        self.contact_import_end = attributes[:'contact_import_end']
      else
        self.contact_import_end = nil
      end

      if attributes.key?(:'contact_cache_clear')
        self.contact_cache_clear = attributes[:'contact_cache_clear']
      else
        self.contact_cache_clear = nil
      end

      if attributes.key?(:'list_cache_clear')
        self.list_cache_clear = attributes[:'list_cache_clear']
      else
        self.list_cache_clear = nil
      end

      if attributes.key?(:'custom_fields_cache_clear')
        self.custom_fields_cache_clear = attributes[:'custom_fields_cache_clear']
      else
        self.custom_fields_cache_clear = nil
      end

      if attributes.key?(:'progress_carrier_bulk_lookup')
        self.progress_carrier_bulk_lookup = attributes[:'progress_carrier_bulk_lookup']
      else
        self.progress_carrier_bulk_lookup = nil
      end

      if attributes.key?(:'progress_email_bulk_lookup')
        self.progress_email_bulk_lookup = attributes[:'progress_email_bulk_lookup']
      else
        self.progress_email_bulk_lookup = nil
      end

      if attributes.key?(:'progress_sub_account_bulk_import')
        self.progress_sub_account_bulk_import = attributes[:'progress_sub_account_bulk_import']
      else
        self.progress_sub_account_bulk_import = nil
      end

      if attributes.key?(:'progress_contact_bulk_import')
        self.progress_contact_bulk_import = attributes[:'progress_contact_bulk_import']
      else
        self.progress_contact_bulk_import = nil
      end

      if attributes.key?(:'force_refresh_web_app')
        self.force_refresh_web_app = attributes[:'force_refresh_web_app']
      else
        self.force_refresh_web_app = nil
      end

      if attributes.key?(:'chat_sender_settings_changed')
        self.chat_sender_settings_changed = attributes[:'chat_sender_settings_changed']
      else
        self.chat_sender_settings_changed = nil
      end

      if attributes.key?(:'country_sender_settings_changed')
        self.country_sender_settings_changed = attributes[:'country_sender_settings_changed']
      else
        self.country_sender_settings_changed = nil
      end

      if attributes.key?(:'chat_summary_chunk')
        self.chat_summary_chunk = attributes[:'chat_summary_chunk']
      else
        self.chat_summary_chunk = nil
      end

      if attributes.key?(:'chat_ways_to_reply_chunk')
        self.chat_ways_to_reply_chunk = attributes[:'chat_ways_to_reply_chunk']
      else
        self.chat_ways_to_reply_chunk = nil
      end

      if attributes.key?(:'chat_suggested_reply_chunk')
        self.chat_suggested_reply_chunk = attributes[:'chat_suggested_reply_chunk']
      else
        self.chat_suggested_reply_chunk = nil
      end

      if attributes.key?(:'user_subscription_changed')
        self.user_subscription_changed = attributes[:'user_subscription_changed']
      else
        self.user_subscription_changed = nil
      end

      if attributes.key?(:'user_subscription_deleted')
        self.user_subscription_deleted = attributes[:'user_subscription_deleted']
      else
        self.user_subscription_deleted = nil
      end

      if attributes.key?(:'task_created')
        self.task_created = attributes[:'task_created']
      else
        self.task_created = nil
      end

      if attributes.key?(:'task_updated')
        self.task_updated = attributes[:'task_updated']
      else
        self.task_updated = nil
      end

      if attributes.key?(:'task_deleted')
        self.task_deleted = attributes[:'task_deleted']
      else
        self.task_deleted = nil
      end

      if attributes.key?(:'task_moved_all')
        self.task_moved_all = attributes[:'task_moved_all']
      else
        self.task_moved_all = nil
      end

      if attributes.key?(:'task_stage_created')
        self.task_stage_created = attributes[:'task_stage_created']
      else
        self.task_stage_created = nil
      end

      if attributes.key?(:'task_stage_updated')
        self.task_stage_updated = attributes[:'task_stage_updated']
      else
        self.task_stage_updated = nil
      end

      if attributes.key?(:'task_stage_deleted')
        self.task_stage_deleted = attributes[:'task_stage_deleted']
      else
        self.task_stage_deleted = nil
      end

      if attributes.key?(:'task_board_created')
        self.task_board_created = attributes[:'task_board_created']
      else
        self.task_board_created = nil
      end

      if attributes.key?(:'task_board_updated')
        self.task_board_updated = attributes[:'task_board_updated']
      else
        self.task_board_updated = nil
      end

      if attributes.key?(:'task_board_deleted')
        self.task_board_deleted = attributes[:'task_board_deleted']
      else
        self.task_board_deleted = nil
      end

      if attributes.key?(:'task_board_archived')
        self.task_board_archived = attributes[:'task_board_archived']
      else
        self.task_board_archived = nil
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if @system_cache_clear.nil?
        invalid_properties.push('invalid value for "system_cache_clear", system_cache_clear cannot be nil.')
      end

      if @system_exit.nil?
        invalid_properties.push('invalid value for "system_exit", system_exit cannot be nil.')
      end

      if @system_alert.nil?
        invalid_properties.push('invalid value for "system_alert", system_alert cannot be nil.')
      end

      if @system_account_state_changed.nil?
        invalid_properties.push('invalid value for "system_account_state_changed", system_account_state_changed cannot be nil.')
      end

      if @system_account_closed.nil?
        invalid_properties.push('invalid value for "system_account_closed", system_account_closed cannot be nil.')
      end

      if @system_account_additional_fields.nil?
        invalid_properties.push('invalid value for "system_account_additional_fields", system_account_additional_fields cannot be nil.')
      end

      if @system_account_permissions_changed.nil?
        invalid_properties.push('invalid value for "system_account_permissions_changed", system_account_permissions_changed cannot be nil.')
      end

      if @user_profile_changed.nil?
        invalid_properties.push('invalid value for "user_profile_changed", user_profile_changed cannot be nil.')
      end

      if @user_balance_changed.nil?
        invalid_properties.push('invalid value for "user_balance_changed", user_balance_changed cannot be nil.')
      end

      if @user_impersonation_end.nil?
        invalid_properties.push('invalid value for "user_impersonation_end", user_impersonation_end cannot be nil.')
      end

      if @message_deleted.nil?
        invalid_properties.push('invalid value for "message_deleted", message_deleted cannot be nil.')
      end

      if @message_incoming.nil?
        invalid_properties.push('invalid value for "message_incoming", message_incoming cannot be nil.')
      end

      if @message_incoming_deleted.nil?
        invalid_properties.push('invalid value for "message_incoming_deleted", message_incoming_deleted cannot be nil.')
      end

      if @message_state_changed.nil?
        invalid_properties.push('invalid value for "message_state_changed", message_state_changed cannot be nil.')
      end

      if @message_bulk_end.nil?
        invalid_properties.push('invalid value for "message_bulk_end", message_bulk_end cannot be nil.')
      end

      if @message_wipe_end.nil?
        invalid_properties.push('invalid value for "message_wipe_end", message_wipe_end cannot be nil.')
      end

      if @message_sent.nil?
        invalid_properties.push('invalid value for "message_sent", message_sent cannot be nil.')
      end

      if @message_session_deleted.nil?
        invalid_properties.push('invalid value for "message_session_deleted", message_session_deleted cannot be nil.')
      end

      if @message_cache_clear.nil?
        invalid_properties.push('invalid value for "message_cache_clear", message_cache_clear cannot be nil.')
      end

      if @message_incoming_cache_clear.nil?
        invalid_properties.push('invalid value for "message_incoming_cache_clear", message_incoming_cache_clear cannot be nil.')
      end

      if @message_schedule_added.nil?
        invalid_properties.push('invalid value for "message_schedule_added", message_schedule_added cannot be nil.')
      end

      if @message_schedule_state_changed.nil?
        invalid_properties.push('invalid value for "message_schedule_state_changed", message_schedule_state_changed cannot be nil.')
      end

      if @message_schedule_deleted.nil?
        invalid_properties.push('invalid value for "message_schedule_deleted", message_schedule_deleted cannot be nil.')
      end

      if @message_schedule_not_sent_state_changed.nil?
        invalid_properties.push('invalid value for "message_schedule_not_sent_state_changed", message_schedule_not_sent_state_changed cannot be nil.')
      end

      if @message_schedule_cache_clear.nil?
        invalid_properties.push('invalid value for "message_schedule_cache_clear", message_schedule_cache_clear cannot be nil.')
      end

      if @message_template_cache_clear.nil?
        invalid_properties.push('invalid value for "message_template_cache_clear", message_template_cache_clear cannot be nil.')
      end

      if @call_finished.nil?
        invalid_properties.push('invalid value for "call_finished", call_finished cannot be nil.')
      end

      if @chat_created.nil?
        invalid_properties.push('invalid value for "chat_created", chat_created cannot be nil.')
      end

      if @chat_marked_as_read.nil?
        invalid_properties.push('invalid value for "chat_marked_as_read", chat_marked_as_read cannot be nil.')
      end

      if @chat_muted.nil?
        invalid_properties.push('invalid value for "chat_muted", chat_muted cannot be nil.')
      end

      if @chat_unmuted.nil?
        invalid_properties.push('invalid value for "chat_unmuted", chat_unmuted cannot be nil.')
      end

      if @chat_pinned.nil?
        invalid_properties.push('invalid value for "chat_pinned", chat_pinned cannot be nil.')
      end

      if @chat_unpinned.nil?
        invalid_properties.push('invalid value for "chat_unpinned", chat_unpinned cannot be nil.')
      end

      if @chat_deleted.nil?
        invalid_properties.push('invalid value for "chat_deleted", chat_deleted cannot be nil.')
      end

      if @chat_closed.nil?
        invalid_properties.push('invalid value for "chat_closed", chat_closed cannot be nil.')
      end

      if @chat_reopened.nil?
        invalid_properties.push('invalid value for "chat_reopened", chat_reopened cannot be nil.')
      end

      if @chat_cache_clear.nil?
        invalid_properties.push('invalid value for "chat_cache_clear", chat_cache_clear cannot be nil.')
      end

      if @chat_read.nil?
        invalid_properties.push('invalid value for "chat_read", chat_read cannot be nil.')
      end

      if @chat_unread.nil?
        invalid_properties.push('invalid value for "chat_unread", chat_unread cannot be nil.')
      end

      if @contact_added.nil?
        invalid_properties.push('invalid value for "contact_added", contact_added cannot be nil.')
      end

      if @contact_deleted.nil?
        invalid_properties.push('invalid value for "contact_deleted", contact_deleted cannot be nil.')
      end

      if @contact_state_changed.nil?
        invalid_properties.push('invalid value for "contact_state_changed", contact_state_changed cannot be nil.')
      end

      if @contact_unsubscribed.nil?
        invalid_properties.push('invalid value for "contact_unsubscribed", contact_unsubscribed cannot be nil.')
      end

      if @contact_note_added.nil?
        invalid_properties.push('invalid value for "contact_note_added", contact_note_added cannot be nil.')
      end

      if @contact_note_deleted.nil?
        invalid_properties.push('invalid value for "contact_note_deleted", contact_note_deleted cannot be nil.')
      end

      if @contact_note_state_changed.nil?
        invalid_properties.push('invalid value for "contact_note_state_changed", contact_note_state_changed cannot be nil.')
      end

      if @list_added.nil?
        invalid_properties.push('invalid value for "list_added", list_added cannot be nil.')
      end

      if @list_deleted.nil?
        invalid_properties.push('invalid value for "list_deleted", list_deleted cannot be nil.')
      end

      if @list_state_changed.nil?
        invalid_properties.push('invalid value for "list_state_changed", list_state_changed cannot be nil.')
      end

      if @contact_wipe_end.nil?
        invalid_properties.push('invalid value for "contact_wipe_end", contact_wipe_end cannot be nil.')
      end

      if @contact_import_end.nil?
        invalid_properties.push('invalid value for "contact_import_end", contact_import_end cannot be nil.')
      end

      if @contact_cache_clear.nil?
        invalid_properties.push('invalid value for "contact_cache_clear", contact_cache_clear cannot be nil.')
      end

      if @list_cache_clear.nil?
        invalid_properties.push('invalid value for "list_cache_clear", list_cache_clear cannot be nil.')
      end

      if @custom_fields_cache_clear.nil?
        invalid_properties.push('invalid value for "custom_fields_cache_clear", custom_fields_cache_clear cannot be nil.')
      end

      if @progress_carrier_bulk_lookup.nil?
        invalid_properties.push('invalid value for "progress_carrier_bulk_lookup", progress_carrier_bulk_lookup cannot be nil.')
      end

      if @progress_email_bulk_lookup.nil?
        invalid_properties.push('invalid value for "progress_email_bulk_lookup", progress_email_bulk_lookup cannot be nil.')
      end

      if @progress_sub_account_bulk_import.nil?
        invalid_properties.push('invalid value for "progress_sub_account_bulk_import", progress_sub_account_bulk_import cannot be nil.')
      end

      if @progress_contact_bulk_import.nil?
        invalid_properties.push('invalid value for "progress_contact_bulk_import", progress_contact_bulk_import cannot be nil.')
      end

      if @force_refresh_web_app.nil?
        invalid_properties.push('invalid value for "force_refresh_web_app", force_refresh_web_app cannot be nil.')
      end

      if @chat_sender_settings_changed.nil?
        invalid_properties.push('invalid value for "chat_sender_settings_changed", chat_sender_settings_changed cannot be nil.')
      end

      if @country_sender_settings_changed.nil?
        invalid_properties.push('invalid value for "country_sender_settings_changed", country_sender_settings_changed cannot be nil.')
      end

      if @chat_summary_chunk.nil?
        invalid_properties.push('invalid value for "chat_summary_chunk", chat_summary_chunk cannot be nil.')
      end

      if @chat_ways_to_reply_chunk.nil?
        invalid_properties.push('invalid value for "chat_ways_to_reply_chunk", chat_ways_to_reply_chunk cannot be nil.')
      end

      if @chat_suggested_reply_chunk.nil?
        invalid_properties.push('invalid value for "chat_suggested_reply_chunk", chat_suggested_reply_chunk cannot be nil.')
      end

      if @user_subscription_changed.nil?
        invalid_properties.push('invalid value for "user_subscription_changed", user_subscription_changed cannot be nil.')
      end

      if @user_subscription_deleted.nil?
        invalid_properties.push('invalid value for "user_subscription_deleted", user_subscription_deleted cannot be nil.')
      end

      if @task_created.nil?
        invalid_properties.push('invalid value for "task_created", task_created cannot be nil.')
      end

      if @task_updated.nil?
        invalid_properties.push('invalid value for "task_updated", task_updated cannot be nil.')
      end

      if @task_deleted.nil?
        invalid_properties.push('invalid value for "task_deleted", task_deleted cannot be nil.')
      end

      if @task_moved_all.nil?
        invalid_properties.push('invalid value for "task_moved_all", task_moved_all cannot be nil.')
      end

      if @task_stage_created.nil?
        invalid_properties.push('invalid value for "task_stage_created", task_stage_created cannot be nil.')
      end

      if @task_stage_updated.nil?
        invalid_properties.push('invalid value for "task_stage_updated", task_stage_updated cannot be nil.')
      end

      if @task_stage_deleted.nil?
        invalid_properties.push('invalid value for "task_stage_deleted", task_stage_deleted cannot be nil.')
      end

      if @task_board_created.nil?
        invalid_properties.push('invalid value for "task_board_created", task_board_created cannot be nil.')
      end

      if @task_board_updated.nil?
        invalid_properties.push('invalid value for "task_board_updated", task_board_updated cannot be nil.')
      end

      if @task_board_deleted.nil?
        invalid_properties.push('invalid value for "task_board_deleted", task_board_deleted cannot be nil.')
      end

      if @task_board_archived.nil?
        invalid_properties.push('invalid value for "task_board_archived", task_board_archived cannot be nil.')
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if @system_cache_clear.nil?
      return false if @system_exit.nil?
      return false if @system_alert.nil?
      return false if @system_account_state_changed.nil?
      return false if @system_account_closed.nil?
      return false if @system_account_additional_fields.nil?
      return false if @system_account_permissions_changed.nil?
      return false if @user_profile_changed.nil?
      return false if @user_balance_changed.nil?
      return false if @user_impersonation_end.nil?
      return false if @message_deleted.nil?
      return false if @message_incoming.nil?
      return false if @message_incoming_deleted.nil?
      return false if @message_state_changed.nil?
      return false if @message_bulk_end.nil?
      return false if @message_wipe_end.nil?
      return false if @message_sent.nil?
      return false if @message_session_deleted.nil?
      return false if @message_cache_clear.nil?
      return false if @message_incoming_cache_clear.nil?
      return false if @message_schedule_added.nil?
      return false if @message_schedule_state_changed.nil?
      return false if @message_schedule_deleted.nil?
      return false if @message_schedule_not_sent_state_changed.nil?
      return false if @message_schedule_cache_clear.nil?
      return false if @message_template_cache_clear.nil?
      return false if @call_finished.nil?
      return false if @chat_created.nil?
      return false if @chat_marked_as_read.nil?
      return false if @chat_muted.nil?
      return false if @chat_unmuted.nil?
      return false if @chat_pinned.nil?
      return false if @chat_unpinned.nil?
      return false if @chat_deleted.nil?
      return false if @chat_closed.nil?
      return false if @chat_reopened.nil?
      return false if @chat_cache_clear.nil?
      return false if @chat_read.nil?
      return false if @chat_unread.nil?
      return false if @contact_added.nil?
      return false if @contact_deleted.nil?
      return false if @contact_state_changed.nil?
      return false if @contact_unsubscribed.nil?
      return false if @contact_note_added.nil?
      return false if @contact_note_deleted.nil?
      return false if @contact_note_state_changed.nil?
      return false if @list_added.nil?
      return false if @list_deleted.nil?
      return false if @list_state_changed.nil?
      return false if @contact_wipe_end.nil?
      return false if @contact_import_end.nil?
      return false if @contact_cache_clear.nil?
      return false if @list_cache_clear.nil?
      return false if @custom_fields_cache_clear.nil?
      return false if @progress_carrier_bulk_lookup.nil?
      return false if @progress_email_bulk_lookup.nil?
      return false if @progress_sub_account_bulk_import.nil?
      return false if @progress_contact_bulk_import.nil?
      return false if @force_refresh_web_app.nil?
      return false if @chat_sender_settings_changed.nil?
      return false if @country_sender_settings_changed.nil?
      return false if @chat_summary_chunk.nil?
      return false if @chat_ways_to_reply_chunk.nil?
      return false if @chat_suggested_reply_chunk.nil?
      return false if @user_subscription_changed.nil?
      return false if @user_subscription_deleted.nil?
      return false if @task_created.nil?
      return false if @task_updated.nil?
      return false if @task_deleted.nil?
      return false if @task_moved_all.nil?
      return false if @task_stage_created.nil?
      return false if @task_stage_updated.nil?
      return false if @task_stage_deleted.nil?
      return false if @task_board_created.nil?
      return false if @task_board_updated.nil?
      return false if @task_board_deleted.nil?
      return false if @task_board_archived.nil?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          system_cache_clear == o.system_cache_clear &&
          system_exit == o.system_exit &&
          system_alert == o.system_alert &&
          system_account_state_changed == o.system_account_state_changed &&
          system_account_closed == o.system_account_closed &&
          system_account_additional_fields == o.system_account_additional_fields &&
          system_account_permissions_changed == o.system_account_permissions_changed &&
          user_profile_changed == o.user_profile_changed &&
          user_balance_changed == o.user_balance_changed &&
          user_impersonation_end == o.user_impersonation_end &&
          message_deleted == o.message_deleted &&
          message_incoming == o.message_incoming &&
          message_incoming_deleted == o.message_incoming_deleted &&
          message_state_changed == o.message_state_changed &&
          message_bulk_end == o.message_bulk_end &&
          message_wipe_end == o.message_wipe_end &&
          message_sent == o.message_sent &&
          message_session_deleted == o.message_session_deleted &&
          message_cache_clear == o.message_cache_clear &&
          message_incoming_cache_clear == o.message_incoming_cache_clear &&
          message_schedule_added == o.message_schedule_added &&
          message_schedule_state_changed == o.message_schedule_state_changed &&
          message_schedule_deleted == o.message_schedule_deleted &&
          message_schedule_not_sent_state_changed == o.message_schedule_not_sent_state_changed &&
          message_schedule_cache_clear == o.message_schedule_cache_clear &&
          message_template_cache_clear == o.message_template_cache_clear &&
          call_finished == o.call_finished &&
          chat_created == o.chat_created &&
          chat_marked_as_read == o.chat_marked_as_read &&
          chat_muted == o.chat_muted &&
          chat_unmuted == o.chat_unmuted &&
          chat_pinned == o.chat_pinned &&
          chat_unpinned == o.chat_unpinned &&
          chat_deleted == o.chat_deleted &&
          chat_closed == o.chat_closed &&
          chat_reopened == o.chat_reopened &&
          chat_cache_clear == o.chat_cache_clear &&
          chat_read == o.chat_read &&
          chat_unread == o.chat_unread &&
          contact_added == o.contact_added &&
          contact_deleted == o.contact_deleted &&
          contact_state_changed == o.contact_state_changed &&
          contact_unsubscribed == o.contact_unsubscribed &&
          contact_note_added == o.contact_note_added &&
          contact_note_deleted == o.contact_note_deleted &&
          contact_note_state_changed == o.contact_note_state_changed &&
          list_added == o.list_added &&
          list_deleted == o.list_deleted &&
          list_state_changed == o.list_state_changed &&
          contact_wipe_end == o.contact_wipe_end &&
          contact_import_end == o.contact_import_end &&
          contact_cache_clear == o.contact_cache_clear &&
          list_cache_clear == o.list_cache_clear &&
          custom_fields_cache_clear == o.custom_fields_cache_clear &&
          progress_carrier_bulk_lookup == o.progress_carrier_bulk_lookup &&
          progress_email_bulk_lookup == o.progress_email_bulk_lookup &&
          progress_sub_account_bulk_import == o.progress_sub_account_bulk_import &&
          progress_contact_bulk_import == o.progress_contact_bulk_import &&
          force_refresh_web_app == o.force_refresh_web_app &&
          chat_sender_settings_changed == o.chat_sender_settings_changed &&
          country_sender_settings_changed == o.country_sender_settings_changed &&
          chat_summary_chunk == o.chat_summary_chunk &&
          chat_ways_to_reply_chunk == o.chat_ways_to_reply_chunk &&
          chat_suggested_reply_chunk == o.chat_suggested_reply_chunk &&
          user_subscription_changed == o.user_subscription_changed &&
          user_subscription_deleted == o.user_subscription_deleted &&
          task_created == o.task_created &&
          task_updated == o.task_updated &&
          task_deleted == o.task_deleted &&
          task_moved_all == o.task_moved_all &&
          task_stage_created == o.task_stage_created &&
          task_stage_updated == o.task_stage_updated &&
          task_stage_deleted == o.task_stage_deleted &&
          task_board_created == o.task_board_created &&
          task_board_updated == o.task_board_updated &&
          task_board_deleted == o.task_board_deleted &&
          task_board_archived == o.task_board_archived
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [system_cache_clear, system_exit, system_alert, system_account_state_changed, system_account_closed, system_account_additional_fields, system_account_permissions_changed, user_profile_changed, user_balance_changed, user_impersonation_end, message_deleted, message_incoming, message_incoming_deleted, message_state_changed, message_bulk_end, message_wipe_end, message_sent, message_session_deleted, message_cache_clear, message_incoming_cache_clear, message_schedule_added, message_schedule_state_changed, message_schedule_deleted, message_schedule_not_sent_state_changed, message_schedule_cache_clear, message_template_cache_clear, call_finished, chat_created, chat_marked_as_read, chat_muted, chat_unmuted, chat_pinned, chat_unpinned, chat_deleted, chat_closed, chat_reopened, chat_cache_clear, chat_read, chat_unread, contact_added, contact_deleted, contact_state_changed, contact_unsubscribed, contact_note_added, contact_note_deleted, contact_note_state_changed, list_added, list_deleted, list_state_changed, contact_wipe_end, contact_import_end, contact_cache_clear, list_cache_clear, custom_fields_cache_clear, progress_carrier_bulk_lookup, progress_email_bulk_lookup, progress_sub_account_bulk_import, progress_contact_bulk_import, force_refresh_web_app, chat_sender_settings_changed, country_sender_settings_changed, chat_summary_chunk, chat_ways_to_reply_chunk, chat_suggested_reply_chunk, user_subscription_changed, user_subscription_deleted, task_created, task_updated, task_deleted, task_moved_all, task_stage_created, task_stage_updated, task_stage_deleted, task_board_created, task_board_updated, task_board_deleted, task_board_archived].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = TextmagicRestClient.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
